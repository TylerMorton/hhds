module(
    name = "hhds",
    version = "0.2.0",
)

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
git_repository = use_repo_rule("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")

bazel_dep(name = "rules_cc", version = "0.1.1")
bazel_dep(name = "rules_foreign_cc", version = "0.14.0")

bazel_dep(name = "googletest", version = "1.17.0")
bazel_dep(name = "google_benchmark", version = "1.9.4")
bazel_dep(name = "fmt", version = "11.2.0")

bazel_dep(name = "abseil-cpp", version = "20240722.1")
bazel_dep(name = "rules_rust", version = "0.59.2")
bazel_dep(name = "rules_rust_bindgen", version = "0.57.1")
bazel_dep(name = "bazel_skylib", version = "1.7.1")

# tree-sitter
git_repository(
	name = "tree_sitter_cpp",
	remote = "https://github.com/tree-sitter/tree-sitter-cpp.git",
	commit = "56455f4245baf4ea4e0881c5169de69d7edd5ae7"
)

# Perfetto
http_archive(
    name = "com_google_perfetto",
    url = "https://github.com/google/perfetto/archive/refs/tags/v49.0.tar.gz",
    sha256 = "0871a92a162ac5655b7d724f9359b15a75c4e92472716edbc4227a64a4680be4",
    strip_prefix = "perfetto-49.0/sdk",
)

# emhash
http_archive(
    name = "emhash",
    build_file = "//tools:emhash.BUILD",
    sha256 = "9ec42a978c34653bc6f0c02b5c2e874d34265f8543cede787c79eb71f6e22f0f",
    strip_prefix = "emhash-60127291d95b5e345ed26c719554130f3dab3bbd",
    urls = ["https://github.com/renau/emhash/archive/60127291d95b5e345ed26c719554130f3dab3bbd.zip"],
)

# iassert
http_archive(
    name = "iassert",
    sha256 = "c6bf66a76d5a1de57c45dba137c9b51ab3b4f3a31e5de9e3c3496d7d36a128f8",
    strip_prefix = "iassert-5c18eb082262532f621a23023f092f4119a44968",
    urls = ["https://github.com/masc-ucsc/iassert/archive/5c18eb082262532f621a23023f092f4119a44968.zip"],
)

# clang-tidy
http_archive(
    name = "bazel_clang_tidy",
    sha256 = "8eb86907abcff8e23b167356222e398a4d3ab7e3277b7dacd29e7d710d8c8ca5",
    strip_prefix = "bazel_clang_tidy-db677011c7363509a288a9fb3bf0a50830bbf791",
    urls = ["https://github.com/erenon/bazel_clang_tidy/archive/db677011c7363509a288a9fb3bf0a50830bbf791.zip"],
)


# Rust configuration
crate = use_extension("@rules_rust//crate_universe:extensions.bzl", "crate")
crate.from_cargo(
	name = "crates_from_cargo_workspace",
	cargo_lockfile = "//hhds/hhds_sys:Cargo.lock",
	manifests = ["//hhds/hhds_sys:Cargo.toml"],
)

crate.from_cargo(
    name = "crate_index",
    cargo_lockfile = "//hhds/hhds_sys:Cargo.lock",
    manifests = [
	    "//hhds/hhds_sys:Cargo.toml",
    ],
)
use_repo(crate, "crates_from_cargo_workspace")
use_repo(crate, "crate_index")

